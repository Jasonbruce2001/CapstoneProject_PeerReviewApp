@model List<AppUser>
@{
    ViewData["Title"] = "Manage Students";
}

<div class="container bg-light-gray p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Manage Students</h1>
        <a asp-action="Index" class="btn btn-secondary">Back to Dashboard</a>
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card mb-4">
        <div class="card-header">
            <form method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" name="searchTerm" class="form-control" placeholder="Search by username or email" value="@ViewBag.SearchTerm">
                        <button class="btn btn-primary" type="submit">Search</button>
                        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                        {
                            <a asp-action="ManageStudents" class="btn btn-secondary">Clear</a>
                        }
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="deleteSelectedBtn" type="button" class="btn btn-danger" disabled>Delete Selected</button>
                </div>
            </form>
        </div>

        <div class="card-body">
            <form id="deleteForm" method="post" asp-action="DeleteSelectedStudents">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <input type="checkbox" id="selectAll" class="form-check-input">
                                </th>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Account Age</th>
                                <th>Class Count</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Any())
                            {
                                @foreach (var student in Model)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="selectedIds" value="@student.Id" class="form-check-input student-check">
                                        </td>
                                        <td>@student.UserName</td>
                                        <td>@student.Email</td>
                                        <td>@student.AccountAge.ToString("MM/dd/yyyy")</td>
                                        <td>@(student.Classes?.Count() ?? 0)</td>
                                        <td>
                                            <div class="btn-group">
                                                <form asp-action="DeleteStudent" method="post" onsubmit="return confirm('Are you sure you want to delete this student?');">
                                                    <input type="hidden" name="id" value="@student.Id">
                                                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                                </form>
                                                <a asp-action="ResetStudentPassword" asp-route-id="@student.Id" class="btn btn-sm btn-warning">Reset Password</a>
                                                <a asp-action="StudentDetails" asp-route-id="@student.Id" class="btn btn-sm btn-info">Details</a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No students found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle Select All checkbox
        document.getElementById('selectAll').addEventListener('change', function () {
            const isChecked = this.checked;
            document.querySelectorAll('.student-check').forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            updateDeleteButton();
        });

        // Handle individual checkboxes
        document.querySelectorAll('.student-check').forEach(checkbox => {
            checkbox.addEventListener('change', updateDeleteButton);
        });

        // Enable/disable delete button based on selections
        function updateDeleteButton() {
            const selectedCount = document.querySelectorAll('.student-check:checked').length;
            const deleteBtn = document.getElementById('deleteSelectedBtn');
            deleteBtn.disabled = selectedCount === 0;
            deleteBtn.textContent = selectedCount > 0 ? `Delete Selected (${selectedCount})` : 'Delete Selected';
        }

        // Submit form for batch deletion
        document.getElementById('deleteSelectedBtn').addEventListener('click', function () {
            if (confirm('Are you sure you want to delete these students? This action cannot be undone.')) {
                document.getElementById('deleteForm').submit();
            }
        });
    </script>
}