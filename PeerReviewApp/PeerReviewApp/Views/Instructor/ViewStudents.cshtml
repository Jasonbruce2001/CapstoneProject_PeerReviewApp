@model StudentListVM

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-3">
            <a asp-action="Index" class="btn btn-primary">< Back</a>
        </div>
        <div class="col-md-6 text-center">
            <h1 class="fw-bolder">Student List</h1>
            <p class="text-muted">Showing @Model.Students.Count of @Model.TotalStudents students</p>
        </div>
        <div class="col-md-3"></div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <!-- Server-side search form -->
                    <div class="d-flex justify-content-end mb-3">
                        <form method="get" class="d-flex" style="max-width: 300px;">
                            <input type="hidden" name="page" value="1" />
                            <input type="text" name="searchTerm" class="form-control me-2"
                                   placeholder="Search students..." value="@Model.SearchTerm">
                            <button type="submit" class="btn btn-outline-primary">Search</button>
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <a asp-action="ViewStudents" class="btn btn-outline-secondary ms-2">Clear</a>
                            }
                        </form>
                    </div>

                    <!-- Students table -->
                    <div style="max-height: 500px; overflow-y: auto; position: relative;">
                        <table class="table table-hover">
                            <thead style="position: sticky; top: 0; background-color: white; z-index: 1;">
                                <tr>
                                    <th class="col-4">Student</th>
                                    <th class="col-5">Class</th>
                                    <th class="col-3 text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Students.Any())
                                {
                                    @foreach (var item in Model.Students)
                                    {
                                        <tr>
                                            <td class="col-4">@item.Student.UserName</td>
                                            <td class="col-5">@item.Class.ParentCourse.Name - @item.Class.Term</td>
                                            <td class="col-3 text-center">
                                                <button type="button" class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete('@item.Student.Id', '@item.Class.ClassId', '@item.Student.UserName')">
                                                    Remove
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center">
                                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                                            {
                                                <span>No students found matching "@Model.SearchTerm"</span>
                                            }
                                            else
                                            {
                                                <span>No students enrolled</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Real working pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="d-flex justify-content-center mt-3">
                            <nav aria-label="Student pagination">
                                <ul class="pagination">
                                    <!-- Previous button -->
                                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                        <a class="page-link"
                                           asp-action="ViewStudents"
                                           asp-route-page="@(Model.CurrentPage - 1)"
                                           asp-route-searchTerm="@Model.SearchTerm"
                                           aria-label="Previous">
                                            <span aria-hidden="true">&lt;</span>
                                        </a>
                                    </li>

                                    <!-- Page numbers -->
                                    @{
                                        int startPage = Math.Max(1, Model.CurrentPage - 2);
                                        int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                                    }

                                    @if (startPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="ViewStudents" asp-route-page="1" asp-route-searchTerm="@Model.SearchTerm">1</a>
                                        </li>
                                        @if (startPage > 2)
                                        {
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        }
                                    }

                                    @for (int i = startPage; i <= endPage; i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-action="ViewStudents" asp-route-page="@i" asp-route-searchTerm="@Model.SearchTerm">@i</a>
                                        </li>
                                    }

                                    @if (endPage < Model.TotalPages)
                                    {
                                        @if (endPage < Model.TotalPages - 1)
                                        {
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        }
                                        <li class="page-item">
                                            <a class="page-link" asp-action="ViewStudents" asp-route-page="@Model.TotalPages" asp-route-searchTerm="@Model.SearchTerm">@Model.TotalPages</a>
                                        </li>
                                    }

                                    <!-- Next button -->
                                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                        <a class="page-link"
                                           asp-action="ViewStudents"
                                           asp-route-page="@(Model.CurrentPage + 1)"
                                           asp-route-searchTerm="@Model.SearchTerm"
                                           aria-label="Next">
                                            <span aria-hidden="true">&gt;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for student deletion -->
<form id="deleteStudentForm" method="post" asp-action="DeleteStudent">
    <input type="hidden" id="studentIdInput" name="studentId" />
    <input type="hidden" id="classIdInput" name="classId" />
</form>

<div class="spacer"></div>

@section Scripts {
    <script>
        function confirmDelete(studentId, classId, studentName) {
            if (confirm(`Are you sure you want to remove ${studentName} from this class?`)) {
                document.getElementById('studentIdInput').value = studentId;
                document.getElementById('classIdInput').value = classId;
                document.getElementById('deleteStudentForm').submit();
            }
        }
    </script>
}